---
- name: Configure ISP Logger Service
  hosts: master[0]
  become: yes
  roles:
  - erikube-defaults
  tasks:
    - name: Create ISP Logger secret for accessing local registry
      shell: |
        {{ kubectl }} create secret docker-registry local-registry-secret \
        --docker-server={{ 'registry.eccd.local:5000' if local_registry_user is defined and local_registry_user != "" else 'null.eccd.local' }} \
        --docker-username={{ local_registry_user if local_registry_user is defined and local_registry_user != "" else 'null' }} \
        --docker-password={{ local_registry_password if local_registry_password is defined and local_registry_password != "" else 'nopassword' }} -n monitoring \
        --dry-run=client -o yaml | {{ kubectl }} apply -f -
      register: result
      become: true
      retries: "{{ kubectl_retry_count }}"
      delay: "{{ kubectl_retry_delay }}"
      until: result.rc == 0
      ignore_errors: True

- name: Deploy ISP Logger Service
  hosts: master[0]
  become: yes
  ignore_errors: True
  pre_tasks:
    - include_vars: ../../common/container-list.json
  vars:
    - tarball_name: "{{ helm_charts.isp_logger.name + '-' + helm_charts.isp_logger.version + '.tgz' }}"
  roles:
    - erikube-defaults

    - role: helm-chart-provisioner
      when: pm_monitoring_enabled | default(true) | bool
      vars:
        - chart_name: isp-logger
        - helm_install_timeout: "{{ helm_install_timeout_value if helm_install_timeout_value is defined else '1200s' }}"
        - tarball: "{{ helm_chart_loc }}/{{ tarball_name }}"
        - state: "purged"
        - kube_namespace: "monitoring"
        - values:
            imagePullSecrets:
              - name: local-registry-secret
            image:
              name: "{{ kube_image_prefix }}{{ containers.monitoring.prometheus_webhook_isp_logger.split(':')[0] }}"
              tag: "{{ containers.monitoring.prometheus_webhook_isp_logger.split(':')[1] }}"
            service:
              type: "ClusterIP"
            heat_stack_name: "{{ heat_stack_name | default('kubernetes') }}"
