---

- name: Add custom certificate for ingress controller in namespace {{ controller_namespace | default('default') }}
  become: yes
  block:
    - name: Create temp workspace directory for secrets
      command: mktemp -d /tmp/k8s-ingress-ctrl-XXXXXX
      register: tmpdir
      changed_when: False

    - name: Copy custom certificate file
      copy: >
        src="{{ ingress_ctrl_cert_file }}"
        dest="{{ tmpdir.stdout }}/tls.crt"
      when: ingress_ctrl_cert_file is defined

    - name: Copy custom certificate content
      copy:
        content: "{{ ingress_ctrl_cert }}"
        dest: "{{ tmpdir.stdout }}/tls.crt"
      when: ingress_ctrl_cert is defined

    - name: Copy custom key file
      copy: >
        src="{{ ingress_ctrl_key_file }}"
        dest="{{ tmpdir.stdout }}/tls.key"
      when: ingress_ctrl_key_file is defined

    - name: Copy custom key content
      copy:
        content: "{{ ingress_ctrl_key }}"
        dest: "{{ tmpdir.stdout }}/tls.key"
      when: ingress_ctrl_key is defined

    - name: Delete existing tls-certificate in {{ controller_namespace | default('default', true) }}
      command: "{{ kubectl }} delete --ignore-not-found=true secret tls-certificate -n {{ controller_namespace | default('default',true) }}"
      register: result
      retries: "{{ kubectl_retry_count }}"
      delay: "{{ kubectl_retry_delay }}"
      until: (result.rc == 0 or "not found" in result.stderr)

    - name: Create tls secret for ingress controller
      command: "{{ kubectl }} create secret tls tls-certificate --key {{ tmpdir.stdout }}/tls.key --cert {{ tmpdir.stdout }}/tls.crt -n {{ controller_namespace | default('default', true) }}"
      register: result
      retries: "{{ kubectl_retry_count }}"
      delay: "{{ kubectl_retry_delay }}"
      until: result.rc == 0

    - name: Delete temp directory
      file:
        name: "{{ tmpdir.stdout }}"
        state: absent
      changed_when: False
  when: (ingress_ctrl_cert_file is defined and ingress_ctrl_key_file is defined) or
        (ingress_ctrl_cert is defined and ingress_ctrl_key is defined)

- name: Create {{ controller_namespace | default('default', true) }} secret for accessing local registry
  shell: |
    {{ kubectl }} create secret docker-registry local-registry-secret \
    --docker-server={{ 'registry.eccd.local:5000' if local_registry_user is defined and local_registry_user != "" else 'null.eccd.local' }} \
    --docker-username={{ local_registry_user if local_registry_user is defined and local_registry_user != "" else 'null' }} \
    --docker-password={{ local_registry_password if local_registry_password is defined and local_registry_password != "" else 'nopassword' }} -n {{ item }} \
    --dry-run=client -o yaml | {{ kubectl }} apply -f -
  register: result
  become: yes
  retries: "{{ kubectl_retry_count }}"
  delay: "{{ kubectl_retry_delay }}"
  until: result.rc == 0
  with_items: "{{ controller_namespace | default('default', true) }}"
