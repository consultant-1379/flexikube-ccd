---
- name: Check variables required to create secret is defined
  assert:
    that:
      - tls_hostname is defined
      - tls_secret is defined
      - tls_cert is defined
      - tls_key is defined

- name: Create temp workspace directory
  command: mktemp -d /tmp/eric-pm-tls-XXXXXX
  register: temp_pm_dir
  changed_when: False

- name: create SAN config file
  copy:
    dest: "{{ temp_pm_dir.stdout }}/sanconfigfile_pm"
    content: |
      [ req ]
      distinguished_name = req_distinguished_name
      req_extensions     = req_ext

      [ req_distinguished_name ]

      [ req_ext  ]
      subjectAltName     = @alt_names

      [alt_names]
      DNS.1              = {{ tls_hostname }}
  become: yes

- block:
  - name: Copy TLS cert
    copy:
      content: "{{ tls_cert }}"
      dest: "{{ temp_pm_dir.stdout }}/tls_1.crt"

  - name: Copy TLS key
    copy:
      content: "{{ tls_key }}"
      dest: "{{ temp_pm_dir.stdout }}/tls_1.key"
  when:
  - tls_cert != ''
  - tls_key != ''

- block:
  - name: Copy CA cert to tmp dir
    copy:
      content: "{{ ca_cert }}"
      dest: "{{ temp_pm_dir.stdout }}/ca.crt"

  - name: Copy CA key to tmp dir
    copy:
      content: "{{ ca_key }}"
      dest: "{{ temp_pm_dir.stdout }}/ca.key"

  - name: Generate csr for certificate
    command: |
      openssl req -nodes -days 3650 -newkey rsa:2048 \
        -keyout "{{ temp_pm_dir.stdout }}/tls_1.key" \
        -out "{{ temp_pm_dir.stdout }}/tls_1.csr" \
        -subj "/CN={{ tls_hostname }}"
        -extensions req_ext -config "{{ temp_pm_dir.stdout }}/sanconfigfile_pm"

  - name: Create a certificate and sign it with trusted cert
    command: |
      openssl x509 -req -days 3650 \
        -in "{{ temp_pm_dir.stdout }}/tls_1.csr" \
        -CA "{{ temp_pm_dir.stdout }}/ca.crt" \
        -CAkey "{{ temp_pm_dir.stdout }}/ca.key" \
        -CAcreateserial \
        -out "{{ temp_pm_dir.stdout }}/tls_1.crt" \
        -extensions req_ext -extfile "{{ temp_pm_dir.stdout }}/sanconfigfile_pm"

  when:
  - ca_key is defined
  - ca_cert is defined
  - tls_cert == '' or tls_key == ''

- block:
  - name: Generate self-signed certificate
    command: |
      openssl req -x509 -nodes -days 3650 -newkey rsa:2048 \
        -keyout "{{ temp_pm_dir.stdout }}/tls_1.key" \
        -out "{{ temp_pm_dir.stdout }}/tls_1.crt" \
        -subj "/CN={{ tls_hostname }}" \
        -extensions req_ext -config "{{ temp_pm_dir.stdout }}/sanconfigfile_pm"
  when:
  - ca_key is not defined or ca_cert is not defined
  - tls_cert == '' or tls_key == ''

- name: Create secret for TLS
  shell:
    executable: /bin/bash
    cmd: "{{ kubectl }} create secret --namespace monitoring tls \
          {{ tls_secret }} \
          --key {{ temp_pm_dir.stdout }}/tls_1.key \
          --cert {{ temp_pm_dir.stdout }}/tls_1.crt \
          --dry-run=client -o yaml | {{ kubectl }} apply -f -"
  register: result
  retries: "{{ kubectl_retry_count }}"
  delay: "{{ kubectl_retry_delay }}"
  until: result.rc == 0

- name: Delete temp directory
  file:
    name: "{{ temp_pm_dir.stdout }}"
    state: absent
  changed_when: False
