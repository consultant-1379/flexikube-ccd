---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: {{ ingressctrl_namespace }}
  labels:
    app: ingress-nginx
spec:
  replicas: {{ ingressctrl_replicas }}
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        app: ingress-nginx
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: nginx-ingress-serviceaccount
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ingress-nginx
            topologyKey: "kubernetes.io/hostname"
{% if  infra_node_pool_name is defined %}
      nodeSelector:
        node-pool: "{{infra_node_pool_name}}"
{% endif %}
      imagePullSecrets:
        - name: local-registry-secret
      containers:
        - name: nginx-ingress-controller
          image: {{ image_erikube_ingressctrl }}
          args:
            - /nginx-ingress-controller
{% if ((ingress_ctrl_cert_file is defined) and (ingress_ctrl_key_file is defined)) or ((ingress_ctrl_cert is defined) and (ingress_ctrl_key is defined)) %}
            - --default-ssl-certificate=$(POD_NAMESPACE)/tls-certificate
{% else %}
            - --default-ssl-certificate=$(POD_NAMESPACE)/ingress-controller-default-tls
{% endif %}
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --enable-ssl-passthrough
            - --watch-ingress-without-class=true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          securityContext:
            capabilities:
              drop: ["ALL"]
              add: ["NET_BIND_SERVICE"]
            runAsUser: 101

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nginx-ingress-controller-pdb
  namespace: ingress-nginx
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: ingress-nginx
