---
- include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "../vars/{{ ansible_distribution }}.yml"
      - "../vars/{{ ansible_os_family }}.yml"
      skip: True

- name: Print containerd_version variable
  debug:
    msg: "{{ containerd_version }}"

- block:
  - name: Stop containerd service
    service:
      name: containerd
      state: stopped
    ignore_errors: yes

  - name: "Do OS specific installation steps of containerd for {{ ansible_distribution }}"
    include_tasks: "{{ containerd_install_item }}"
    with_first_found:
      - files:
        - "install-{{ ansible_distribution }}.yml"
        - "install-{{ ansible_os_family }}.yml"
        skip: True
    loop_control:
      loop_var: containerd_install_item

  when: not is_atomic and ansible_os_family != 'Debian'

- name: Remove suse packaged containerd binaries so it can use built binary
  become: yes
  ignore_errors: yes
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/usr/sbin/containerd"
    - "/usr/sbin/containerd-shim"
    - "/usr/sbin/containerd-shim-runc-v1"
    - "/usr/sbin/containerd-shim-runc-v2"
  when:
    - ansible_distribution == "SLES"

- name: copy containerd.service (Debian)
  become: yes
  copy:
    src: containerd.service
    dest: /lib/systemd/system/containerd.service
  when:
    - ansible_distribution == "Ubuntu"
    - not image_based_deployment | default(false) | bool

- name: copy containerd.service (Suse)
  copy:
    src: "{{ containerd_svc_file }}"
    dest: /usr/lib/systemd/system/containerd.service
  when:
    - ansible_distribution == "SLES"

- name: Print containerd_svc_file variable
  debug:
    msg: "{{ containerd_svc_file }}"

- name: copy containerd.service (Centos)
  become: yes
  copy:
    src: containerd.service
    dest: /usr/lib/systemd/system/containerd.service
  when:
    - ansible_distribution == "CentOS"
    - not image_based_deployment | default(false) | bool
